const fs = require("fs");
const path = require("path");
const LinksBaseType = require('./LinksBaseType.json');

class MaliciousUser {
    constructor(base = {
        userId: undefined,
        reason: undefined,
        proofs: []
    }, localUser = true) {
        base.localUser = false;

        this.base = localUser? {
            localUser: localUser,
            appeal: {
                status: "Sin estado.",
                reason: "Sin razÃ³n"
            },
            dates: {
                punishment: Infinity,
                addedAt: Date.now(),
                lastUpdate: Date.now(),
                reportedAt: Date.now()
            },
            added: {
                by: {
                    tag: "Anonymous#0001",
                    id: undefined
                },
                anonymous: true
            },
            userId: base.userId,
            isMalicious: true,
            reason: base.reason,
            proof: base.proofs[0] ?? undefined,
            proofs: base.proofs.length > 1? base.proofs.slice(1) : []
        } : base;
    }

    save() {
        fs.writeFileSync(path.join(__dirname, '../Cache/Malicious/Users/' + this.base.userId + '.json'), JSON.stringify(this.base));
    }
};

class MaliciousLink {
    constructor(base = {
        domain: undefined,
        isMalicious: undefined,
        typef: undefined
    }, localLink = true) {
        base.localLink = false;

        this.base = localLink? {
            localLink: localLink,
            domain: base.domain,
            isMalicious: base.isMalicious,
            type: LinksBaseType.BaseStringTypes[base.typef.toString()],  // MALICIOUS, SUSPICIOUS, MAYBE, NOT_MALICIOUS
            typef: base.typef,                                           // 0          1           2      3
            dates: {
                addedAt: Date.now(),
                lastUpdate: Date.now(),
                reportedAt: Date.now()
            },
            added: {
                anonymous: true,
                by: {
                    tag: 'Anonymous#0001',
                    id: undefined
                }
            }
        } : base;
    }

    save() {
        if(this.base.domain.includes('/')) this.base.domain = this.base.domain.split('/').join('_');
        fs.writeFileSync(path.join(__dirname, '../Cache/Malicious/Links/' + this.base.domain + '.json'), JSON.stringify(this.base));
    }
};

module.exports = {
    MaliciousUser,
    MaliciousLink
};